function hideStrayCommas(){let onlyCommas=$(".authors .hlFld-ContribAuthor span.NLM_contrib-group").text().split(' ').join('').split(',').join('')==="";if(onlyCommas){$(".authors .hlFld-ContribAuthor span.NLM_contrib-group").css('display','none');}}
function showAuthorsExpander(){let $root=$('.author-container');let $exp=$root.first().find('.hlFld-ContribAuthor');if($exp.size()>0){let $contr=$exp.find('.contribDegrees');if($contr.size()>3){$('a.show-all-link.js__toggleArticleAuthors').css('display','block');}}}
function addExpanderCaret(){let $root=$('.author-container');let $exp=$root.first().find('.hlFld-ContribAuthor');if($exp.size()>0){let $contr=$exp.find('.contribDegrees');if($contr.size()>3){$('span.expandable-author').before('<span id="expandableAuthorArrow" class="arrow-down indicator"></span>');$('span.expandable-author').click(function(){if($(this).text()==="Show all authors"){$("#expandableAuthorArrow").toggleClass('arrow-down arrow-up');}else{$("#expandableAuthorArrow").toggleClass('arrow-up arrow-down');}});}else{$exp.find('span.more-than').remove();}}}
function sanitizeDiv($root){let $commas=$root.contents(":not(span.contribDegrees):not(.expandable-author):not(span.more-than)");let $source=$root.html();$root[0].innerHTML=$source.replace($commas.text()," ");$root.contents(":not(span.contribDegrees):not(.expandable-author):not(span.more-than)").filter(function(){return this.nodeType===3;}).remove();checkTrailingCommaAll($root);}
function appendMissingCommas(node){let t=$(node).text().trim();if(t.length>0&&t.lastIndexOf(',')<t.length-1){$(node).append(", ");}}
function cutLastComma(node){let t=$(node).text().trim();if(t.length>0&&t.lastIndexOf(',')===t.length-1){node.textContent=t.slice(0,-1);}}
function checkTrailingCommaAll($root){$root.find('span.contribDegrees').each(function(){let nextNode=this.nextSibling;if(nextNode){if(nextNode.nodeType===Node.ELEMENT_NODE&&$(nextNode).hasClass('contribDegrees')){appendMissingCommas(this);}
else if(nextNode.nodeType===Node.TEXT_NODE&&nextNode.nextSibling===null){cutLastComma(nextNode);}}})}
function addTrailingComma(){let $lastAuthor=$('.more-than').prev();if(!$lastAuthor.hasClass('contribDegrees'))
$lastAuthor=$lastAuthor.prev();if($lastAuthor.hasClass('contribDegrees')){let t=$lastAuthor.text().trim();if(t.length>0&&t.lastIndexOf(',')<t.length-1){$lastAuthor.append(", ");}}}
function fixMultiContrib($root){let $exp=$root.find('.expandable-author');if($exp.size()>1){let $contr=$root.find('span.contribDegrees');$root.find('.more-than').remove();$root.find('span.expandable-author').remove();if($contr.size()>3){let $ea=$('<div/>').appendTo($root).append($root.find('span.contribDegrees'));$root.find('.expandable-author').remove();$ea.addClass('expandable-author');$root.prepend($ea.find('span.contribDegrees').slice(0,3)).append('<span class="more-than">...</span>');}else{$root.find('.expandable-author').remove();}}}
function authorsPatch(){hideStrayCommas();showAuthorsExpander();addExpanderCaret();let $authorsList=$('.publicationContentAuthors');let $root=$authorsList.first().find('.hlFld-ContribAuthor');if($root.size()>0){fixMultiContrib($root);addTrailingComma();sanitizeDiv($root);}}